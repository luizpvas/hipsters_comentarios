{"title":"Desenvolvimento Android – Hipsters #39","releaseDate":"11/04/2017","tags":["mobile","Podcast","programação"],"people":["Paulo Silveira","Mauricio Balboa Linhares","Neto Marin","Felipe Torres","Jeferson Silva"],"disqusUrl":"https://disqus.com/embed/comments/?base=default&f=hipsterspontotech&t_i=835%20http%3A%2F%2Fhipsters.tech%2F%3Fp%3D835&t_u=https%3A%2F%2Fhipsters.tech%2Fdesenvolvimento-android%2F&t_e=Desenvolvimento%20Android%20%E2%80%93%20Hipsters%20%2339&t_d=Desenvolvimento%20Android%20-%20Hipsters%20%2339%20-%20Hipsters%20Ponto%20TechHipsters%20Ponto%20Tech&t_t=Desenvolvimento%20Android%20%E2%80%93%20Hipsters%20%2339&s_o=default#version=600a9bd88a8393b10140eb70dcc30fd1","comments":[{"author":"Marques Denis","comment":"Sou desenvolvedor C#, e cheguei a tirar uma certificação Xamarin Developer ano passado, aprendi alguns truques novos. E este ano resolvi sair da minha zona de conforto e apreender Android  com o pessoal da Alura. Estou impressionado com a Android Studio, é muito fluido o desenvolvimento, esta sendo muito prazeroso programar em Java nele. Valeu a pena sair da zona de conforto!"},{"author":"Eric Andrade","comment":"Ótimo podcast.Com certeza um app nativo tem mais qualidade que um híbrido, mas eu discordo que não tenha pelo menos um aplicativo hibrído que não tenha qualidade, temos o Spotify como exemplo."},{"author":"jallisson jallis oliveira band","comment":"muito bom esse podcast"},{"author":"Vinícius Dias","comment":"\"Eu enxergo em 8 bits.\" Kkkkkkkkkkk"},{"author":"Danillo Nunes","comment":"Baixando aqui... Vou dar uma estrelinha. Depois de ouvir o episódio, se for bom eu dou mais. :P"},{"author":"Luiz Fernando Alves","comment":"O Neto criticou bastante os híbridos do cordova e elogiou o Xamarim, mas não falou do React-Native.Eu gostaria de saber a opinião de vocês sobre o mesmo (não só da galera do podcast, mas de qualquer um que quiser discorrer sobre o assunto).Eu particularmente gosto muito da performance do react-native, dos recursos que ele já apresenta (mesmo ainda sendo um \"bebê\"), da sua forma reativa de funcionar e principalmente por ele fornecer os componentes visuais nativos de cada SO sem precisar de escrever códigos separados.Tendo em vista essa última vantagem, eu creio que seria o caminho ideal, não só para o mundo mobile, mas para apps em geral seguirem.Seria ótimo um mundo que você pudesse desenvolver uma interface e cada sistema interpretasse-a nativamente, de acordo com os recursos presentes no SO.Se isso funcionou na web, por que não em outras áreas!?opinem...Grande Abraço!"},{"author":"Felipe Torres","comment":"Eu concordo com você quando diz que é o caminho ideal. No entanto, discordo que \"seria ótimo escrever uma interface única e cada sistema interpretar nativamente\", pois para isso todos os sistemas teriam que ter os mesmos componentes gráficos e isso nem sempre acontece. O iOS tem elementos gráficos que o Android não possui e vice-versa.Então, eu acho que um código único para backend é uma baita \"mão-na-roda\", porém deixar esse mesmo código único para o front implicaria trabalharmos com os mesmos componentes gráficos em plataformas diferentes. Isso levaria a duas situações: ou teríamos aplicativos com usabilidades iguais em plataformas diferentes (que não é algo legal), ou teríamos que trabalhar com layouts diferentes para plataformas diferentes (mas isso já é o que fazemos hoje)."},{"author":"Luiz Fernando Alves","comment":"Muito bom comentário, pontuando algo bem importante: Existem componentes gráficos e recursos diferentes dependendo da plataforma.Concordo totalmente com você, como também temos diferença entre recursos e componentes gráficos em browsers que vem sendo diminuída cada vez mais. Mas temos que concordar que quando temos que utilizar um componente exclusivo de determinada plataforma, é extremamente mais prático escrevermos só aquele código a parte em vez  reescrever todo o aplicativo em outra linguagem. Isso requer um custo de manutenção muito alto.O React-Native te dá a opção de escrever uma parte do código específica para uma plataforma, permitindo que se houver algum recurso só disponível em determinada plataforma, você consiga escrever uma parte do código que só será lido pela mesma.No caso de componentes diferentes e com funções parecidas, existe como criar formas inteligentes de reconhecê-los e adaptar a plataforma em que o app está sendo executado. Um simples exemplo disso é como o RN usa a janela de alerta nativa de ios e android, que são totalmente diferentes e requerem, inclusive, parâmetros diferentes. Ainda assim você só precisa escrever a chamada de alerta uma vez e funcionará para as duas plataformas. ( fonte/exemplo: https://facebook.github.io/... )Resumindo de forma bem sucinta com duas questões que agem na filosofia do react-native: Um retângulo azul, que será sempre um retângulo azul em qualquer lugar, precisa ser descrito de uma forma diferente para cada lugar onde ele é exibido? Se em uma plataforma o padrão de layout é exibir o retângulo azul com borda levemente arredondada será que não é melhor fazer essa conversão automaticamente?Iniciativas como essa até ajudariam a padronizar mais os componentes disponíveis em diversas plataformas, deixando o mundo de desenvolvimento mais colorido :)"},{"author":"João Lucas dos Santos","comment":"Depois de alguns anos de Java, estou começando agora com Android.Muito bom o episodio. Alguns brinquedinhos pra estudar. :)Att,"},{"author":"Sergio Rodrigo","comment":"Queria saber se usar o Netbeans pra desenvolver Android é qual nivel de Hipster? hahahahahaAbçs!"},{"author":"Welton Vaz de Souza","comment":"E melhor usar o Android Studio, a dor de cabeça é menor!"},{"author":"Paulo Silveira","comment":"é rock n roll!! deve dar um trabalho...."},{"author":"Rômulo Innocêncio","comment":"Eu não sei o que tem o android, eu até gosto, acho massa, bem pensado.... mas no meu MotoG2 trava pra kraio.... será que é muita Gambiarra no if? hahaha Parabéns ai pelo podecast, acompanho desde sempre. =)"},{"author":"Lucas Souza","comment":"Tenta colocar uma ROM personalizada cara, tipo a Lineage OS. Na época que ainda tinha a Cyanogenmod Mod, eu instalei uma em um Moto E G1 que eu tinha e ficou muito melhor, em vista do que era antes."},{"author":"Jader Teixeira","comment":"Deu um problema na thumbnail no aplicativo de podcast que eu uso, apareceu a thumbnail do episódio 44"},{"author":"Paulo Silveira","comment":"opa!! corrigido. E agora Jader.... voce é um homem que sabe demais :P"},{"author":"²He","comment":"Li algumas coisas a um tempo atrás sobre desenvolvimento pra android em Python.Alguem já tentou? Tem exemplo de algum app \"grande\" desenvolvido assim?"},{"author":"Paulo Silveira","comment":"parece que pesoal usa o tal do kivy e do qpython, mas nao acho que tenha ganhado muita adesao!"},{"author":"Valdir Viana","comment":"Bem que os caras falaram, saiu hoje o Developer Preview do Android O.https://developer.android.c..."},{"author":"Vagner Araújo","comment":"app do banco original, facebook, Instagram e Airbnb entre outros são hibrido ! Não vejo o Xamarin ainda como vantagem para quem é DEV, recomendo bastante React Native JS, matando os problemas que o hibrido tinha com o ionic / phonegap ! Parabéns pelo Podcast"},{"author":"Felipe Torres","comment":"Acho React Native e Xamarin beeem legais! Hoje em dia, estou um pouquinho mais pro lado do Native pois acho animal o que o pessoal da Microsoft tá fazendo no Code Push: com esse plugin em vez de criar uma nova atualização da app e esperar os usuários baixarem, é possível deployar o código \"direto\" pro usuário! o.OO facebook gosta bastaaaante disso. hahaha"},{"author":"Vagner Araújo","comment":"preciso estudar um pouco mais sobre esse assunto, pessoal anda comentando bastante !"},{"author":"Silvio Pereira","comment":"React Native não é hibrido. Ele compila pra nativo. Hibrido é quando ele gera o instalador e uma webview e dali pra dentro é tudo web usando Cordova para os acessos de hardware."},{"author":"Vagner Araújo","comment":"Quando faço 1 código que roda em múltiplas plataformas ele é hibrido. Hibrido não remete apenas a web."},{"author":"Silvio Pereira","comment":"Quando o mesmo código roda em várias plataformas ele é híbrido mesmo, o que não é o caso do react native. No native, o que vai rodar em cada plataforma é um código nativo gerado à partir do mesmo fonte. Nas plataformas híbridas como Ionic e PhoneGap, a maior parte do código da aplicação em html e JavaScript é executado nessas linguagens, dentro de uma webview. Esse é o motivo de serem chamadas plataformas híbridas. Acredito que existe um entendimento nesse sentido pela comunidade, ou pelo menos foi este sentido que foi usado no podcast."},{"author":"Thiago do Nascimento da Silva","comment":"Que eu saiba o código JavaScript que você escreve em React-native não é compilado pra código nativo, ele roda js mesmo, conforme você vai mexendo na virtual dom do react ele vai transformando em componente nativo em tempo de execução tanto é que você pode apenas trocar o JS interno do APK sem instala-lo novamente para atualizar. Sendo assim toda a logica continua sendo um único código rodando em 2 plataformas diferentes."},{"author":"Eduardo Paixão","comment":"\"Nativo vs Js\" WebAssembly mandou um abraço!"},{"author":"Lindomar Reitz","comment":"Outra opção para automação de testes no nível de UI é o Appium: http://appium.io/"},{"author":"Cleiton","comment":"Muitas vezes vc aprende muito mais em um podcast do que uma semana batendo a cabeça fazendo vários cursos. Parabéns a toda galera hipsters.tech, Aguardando o próximo podcast sobre Android !"},{"author":"Inaldo Brandão","comment":"Muito foda, material android é sempre bom, parabéns Alura. Sugiro os próximos com algo relacionado a sincronização, uso de webservice, abraço ! #RetrofitÉVida"},{"author":"Carlos Carvalho","comment":"Sensacional com sempre. Parabéns pessoal!Eu não conhecia o projeto instant apps, achei super bacana. A google está recebendo inscrições para ter acesso a documentação, essa parte eu tenho um interesse especial. Segue o link para os curiosos como eu: https://developer.android.c..."}]}