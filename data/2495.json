{"title":"Programação Funcional (e (clojure)) – Hipsters #158","releaseDate":"23/07/2019","tags":["Podcast","programação"],"people":["Paulo Silveira","Wilker Lucio","Carolina Pascale Campos","Lucas Cavalcanti","Roberta “Linhares”","Maurício “Balboa” Linhares"],"disqusUrl":"https://disqus.com/embed/comments/?base=default&f=hipsterspontotech&t_i=2495%20https%3A%2F%2Fhipsters.tech%2F%3Fp%3D2495&t_u=https%3A%2F%2Fhipsters.tech%2Fprogramacao-funcional-e-clojure-hipsters-158%2F&t_e=Programa%C3%A7%C3%A3o%20Funcional%20(e%20(clojure))%20%E2%80%93%20Hipsters%20%23158&t_d=Programa%C3%A7%C3%A3o%20Funcional%20(e%20(clojure))%20-%20Hipsters%20%23158%20-%20Hipsters%20Ponto%20TechHipsters%20Ponto%20Tech&t_t=Programa%C3%A7%C3%A3o%20Funcional%20(e%20(clojure))%20%E2%80%93%20Hipsters%20%23158&s_o=default#version=600a9bd88a8393b10140eb70dcc30fd1","comments":[{"author":"João Scharf","comment":"Eu realmente achava que Scala era uma linguagem topzeira pra aprender e tentar uns trampo topzeiras"},{"author":"Maurício Linhares","comment":"Continua sendo uma ótima linguagem e tendo várias vagas disponíveis, mas o pessoal das outras comunidades gosta sempre de dizer que não é bom :)"},{"author":"Felipe","comment":"Achei só um pouco chato o comentário do engenheiro do nubank, falando que prefere até pessoas sem conhecimento de clojure (ou scala), dizendo que dai as pessoas não vem com vicios, então só quem aprende no nubank sabe aplicar o funcional de forma correta?"},{"author":"Felipe","comment":"Achei o podcast bem bacana, achei que algumas perguntas ficaram meio no ar, mas também é um bate-papo e não uma talk, então suave... Abração!"},{"author":"Renan Oliveira","comment":"O que faz um principal engineer?"},{"author":"Roberta Arcoverde","comment":"A resposta mais correta pra essa pergunta é: depende :) Cada empresa tem um conjunto de atribuições/responsabilidades. Trazendo pro que é comum em planos de carreira brazucas, seria algo depois de sênior, mas sem gestão de pessoas. Lá na empresa, um Principal Developer tem obrigação de multiplicar conhecimento, mentorando devs menos experientes e atuando como braço direito de PMs e gerentes. Também temos um papel de liderança, de reforçar boas práticas, dar ideias, revisar código, representar as opiniões dos devs diante dos executivos, coisas assim. Ou seja, diferentemente do Nubank, não estou em vários squads, mas tenho uma posição de liderança técnica no meu time e na empresa."},{"author":"Paulo Silveira","comment":"principalmente ele faz engenharia :P.entao, eu nao sei explicar tambem, mas é algo da carreira em Y como um cara que manja muito de alguns assuntos e está em varios squads ao mesmo tempo para dar suporte aos problemas mais complicados"},{"author":"Bruno de Assis Lima","comment":"Me identifiquei logo no começo, eu tinha uma dificuldade em aceitar o \"x = x+1;\" não fazia sentido algum para mim. Principalmente matematicamente. Até que um colega na sala falou \"x recebe x + 1; Ahhhh, dai em diante tudo começou a fazer sentido. Por causa de uma palavra."},{"author":"Paulo Silveira","comment":"eu esqueci de comentar, mas é por isso que algumas linguagens tentaram usar o := em vez do =, para separar atribuicao de comparacao de forma mais proxima a matematica"},{"author":"Vou me embora pra Pasárgada","comment":"Falta muita bagagem conceitual sobre programação funcional no que vocês estão falando. Somente o início do pod onde vocês começam a falar sobre funções já escancara a carência de conceitos. Também, programação funcional não se trata de somente map, filter, imutabilidade, reduce... programação funcional vai muito além disso. Quanto aos comentários sobre Scala, vocês tem noção do prêmio que ganharam da SIGPLAN? Scala não somente fez um excelente trabalho no campo da programação funcional (perdendo somente para Haskell), como também adota conceitos de teoria das Categorias que é a base para programação funcional moderna. Mas se a abordagem sobre programação funcional foi tão rasa, imagino então até o desconhecimento sobre teoria das categorias (que é a base de functores e monadas). Esperava mais."},{"author":"Roberta Arcoverde","comment":"Opa, fiz um comentário chato mesmo sobre Scala, valeu pelo puxão de orelha. Fui fazer piada de \"linguagem de nicho\" mas a piada foi ruim (e sem acurácia! mea culpa pois a única linguagem funcional com que tive um contato mais prático foi Haskell, e faz uns bons anos). Quanto à profundidade do assunto, acho que a intenção era falar de programação funcional pra leigos - e é sempre um assunto muito difícil de abordar de forma simples e clara pra quem não tem formação teórica. Temos um episódio anterior sobre programação funcional que vai um pouquinho mais a fundo, mas acho que não fomos tão a fundo quanto você esperaria - falamos brevemente de mônadas mas não discutimos Teoria das Categorias."},{"author":"Paulo Silveira","comment":"eu fico é feliz de  que nao falamos de monadas, functors e teoria da categoria!! imagine em um podcast que estamos focados em falar de x = x +1 chegar a isso?e interpretar que quisemos dizer que \"programacao funcional se trata apenas de  usar map, filter e reduce\" ou qualquer coisa parecida, e nao sacar que tentamos mostrar o começo do começo das diferencas do dia a dia, é durezaaqui tem o que a roberta se referenciou:https://hipsters.tech/lingu..."},{"author":"Wiliam Teodoro","comment":"O começo do começo é sempre a base conceitual. Sem dar uma base conceitual sólida sobre do que se trata o paradigma funcional, não dá para orientar os ouvintes que desejam realmente absorver o conceito e partir para níveis mais altos. Acredito que entendo o objetivo do pod que  foi somente falar \"sobre\"..  e falar \"sobre\" para iniciantes. Mas aí deveriam, pelo menos, contextualizar mais alterando o título do pod. Meio que ficou muito 'jogado\" ... se fala de map, filter e alguns outros verbos do \"dia a dia\" de quem trabalha com uma linguagem funcional. Mas acontece o que percebo em diversos lugares que tentam adotar o funcional... quê é somente aplicar a caixinha de ferramentas sem, entretanto, ninguém realmente falar de forma sólida a respeito do assunto.Mas, de qualquer forma, valeu  o esforco dos participantes. Somente não precisam ter tanto medo assim de falar abertamente da matemática envolvida. Com certeza muitos irão apreciar.Abs"},{"author":"Bruno Andrade","comment":"Senti falta de falar de Elm :("},{"author":"Frost Any","comment":"na facul. vi muito pouco de programação funcional, isso na cadeira de 'Paradigmas de Linguagem de Programação\"... é muito rapido, uma unidade ensinam Scheme e outra Prolog que é paradigma logico xD"},{"author":"Maurício Linhares","comment":"Scheme é muito legal pra aprender FP, mas seria bom pegar pelo menos uma linguagem funcional tipada, tipo Haskell/Scala/OCaml, porque tem vários conceitos que só vão fazer sentido lá, como monads, type classes e category theory no geral."},{"author":"pedroigor91","comment":"Só uma pequena correção, Twitter ainda usa Scala como linguagem principal de sua stack, o que eles trocaram foi o Ruby on Rails. Scala é vida <3"},{"author":"Paulo Silveira","comment":"comi bola!!"}]}