{"title":"Overengineering – Hipsters #152","releaseDate":"11/06/2019","tags":["Podcast","programação"],"people":["Paulo Silveira","Tadeu Russo","Phillip Calçado","Roberta Arcoverde","Maurício “Balboa” Linhares"],"disqusUrl":"https://disqus.com/embed/comments/?base=default&f=hipsterspontotech&t_i=2413%20https%3A%2F%2Fhipsters.tech%2F%3Fp%3D2413&t_u=https%3A%2F%2Fhipsters.tech%2Foverengineering-hipsters-142%2F&t_e=Overengineering%20%E2%80%93%20Hipsters%20%23152&t_d=Overengineering%20-%20Hipsters%20%23152%20-%20Hipsters%20Ponto%20TechHipsters%20Ponto%20Tech&t_t=Overengineering%20%E2%80%93%20Hipsters%20%23152&s_o=default#version=600a9bd88a8393b10140eb70dcc30fd1","comments":[{"author":"Fábio","comment":"Linhares é foda. Se você usar reack para crud, vc tem problema. aiujhahuuahuahuhauhauhauha"},{"author":"Rafael Sousa","comment":"Se funciona não precisa mexer... \n\n\nVisualizar\n\n\n Ocultar\n\n\n\n\n\n"},{"author":"Otávio Fernandes","comment":"Olá!Não consegui entender muito bem o rant sobre Kafka pra ser sincero. :-)Eu observei que os participantes, em determinado momento, estão confundindo mensageira com \"event-driven architectures\". Em mensageira você tem o remetente e o destinatário bem definidos, ou seja, o sistema A produz mensagens para o sistema B. Agora, no caso do Kafka, estamos falando em event-driven onde existe uma separação lógica entre do remetente e o destinatário, onde um não sabe (nem poderia saber) sobre a existência do outro. Eventos são produzidos no \"backbone\" da infraestrutura, e outras aplicações que estão interessadas em lidar com estes eventos vão fazer o streaming destes dados e lidar com eles de maneira adequada.Ou seja, se você se foca em lidar com event-driven/streaming, vai também poder lidar com as contrapartidas  deste tipo de arquitetura, onde outros componentes externos podem ajudar a manter o fluxo de eventos organizados e saudável.Bom, no mais eu estou gostando bastante do episódio, um forte abraço!"},{"author":"Thadeu Russo","comment":"Ola Otavio, obrigado pela pergunta e pelos elogios.Nao sei se concordo sobre rant sobre Kafka e sobre confusao entre message based systems e event-driven architectures. O ponto central da discussao eh sobre o uso inapropriado tanto do kafka/event driven architectures. Um exemplo bem simples eh onde se coloca kafka entre a comunicacao de dois servicos, onde poderiamos usar algo simples como uma chamada remota sincrona - o que desafia a definicao de duas partes nao poderem se conhecer. Em muitos casos se assume que dois sistemas sao totalmente independentes pois nao se conhecem. Eu digo que isso eh uma falacia da menira que eh posta pelos arquitetos em geral, pois se uma parte precisa de dados do outro, existe um altissimo risco de acoplamento de schema e, ainda mais complicado, de acoplamento semantico. No podcast do Nubank, o Lucas comentou sobre os testes que eles precisaram fazer para garantir que pequenas (e backward compatible) mudancas no schema nao quebrariam consumidores dos dados. O acomplamento semantico e ainda mais complicado, pois voce esta sujeito a quebra de contrato por mudanca de valores (e.g.: enums, numeros que ficam fora dos ranges que um consumidor esta esperando, etc). Eu entendo que chamadas remotas sincronas trazem diversos desafios tambem (e..g: availability), mas em muitos casos eh algo extremamente simples de se implementar. Kafka e event driven architectures adicionam um componente sobre a camada de rede, que precisa de monitoramento, manutencao, etc pois o kafka acaba virando mais um single point of failure na arquitetura (junto com a rede, dns, load balancers). Esse eh o ponto que discutimos: uso inapropriado.Sobre a parte de troca de mensagens (que eu adoro por sinal), alem dos problemas de schema e semantica, voce ainda tem que lidar com dead-letter-queues, que podem ficar cheias muito rapido e, a falta de monitoramento adequado, pode levar a situacoes catastroficas (milhoes de mensagens que podem demorar horas ou ate dias para serem re-processadas). Em geral, muita gente sai jogando filas para la e para ca sem necessidade real.Espero que tenha deixado mais claro."},{"author":"Abednego Silva","comment":"Tenho uma dúvida específica: por volta do minuto 7:20 o Paulo defendeu o uso de \"ferramentas mais redondas\", \"com décadas de experiência\" para esse propósito (CRUD's ou coisas mais simples), mas não mencionou um exemplo dessas ferramentas. Alguém (Paulo?) poderia dar pelo menos um exemplo de uma dessas ferramentas?Obrigado por dedicarem o tempo e a energia de vocês para produzirem esse excelente podcast!"},{"author":"Maurício Linhares","comment":"Rails e Django pra fazer CRUD."},{"author":"Erick Takeshi Mine Rezende","comment":"Pow Paulo...Agora complementa aí com os casos de uso correto de cada tecnologia crucificada, senão vai parecer flame gratuito ein hahahah"},{"author":"Maurício Linhares","comment":"A gente tem EPs sobre quase todas, as que não tem ainda com certeza vão aparecer."},{"author":"kandrus","comment":"Ainda há esperança para os podcasts do BR :)Parabéns pelo episodio ficou top. Um pouco de realidade em grande mar de devaneios kkkkkkk"},{"author":"Victor Rodrigues","comment":"De alma lavada depois desse rant com Kafka, Kubernetes, Mongo, etc hehe.. Outra coisa que rola demais são os devs mãe-Dinah, overcomplicando as coisas simples pq \"no futuro vamos precisar\".Tô adorando o podcast (salve querida Betinha ❤️)."},{"author":"Roberta Arcoverde","comment":"graaaande Vitinho, que honra!"},{"author":"Allison Piovani","comment":"Ueee todo vez q esse Balboa fala é só pra reclamar?"},{"author":"Edison Martins","comment":"Já que Arquitetura Hexagonal foi citada neste episódio, os senhores poderiam fazer um episódio falando sobre isto. Seria show!!!"},{"author":"Lucas Palma Stabile","comment":"Esse episódio me lembrou de uma tela que estava desenvolvendo numa empresa que utilizava um plugin javascript ou JQuery para fazer uns filtros mais avançados: escolher campos, ordem de campos, condições e operações lógicas. Com esse plugin eu só precisaria obter o resultado pra criar uma consulta mais fácil no banco usando NHibernate. Tivemos uma ideia de utilizar reflection e Data Annotations nos nossos objetos pra popular o filtro JQuery, dessa forma teríamos como fazer várias consultas sem criar muitas coisas na mão. Na prática tivemos vários problemas com objetos filhos ou netos de uma classe que não gerava as consultas direito hahaha. Foi uma experiência legal e aprendi bastante na época, mas poderíamos ter abordado o problema com consultas mais limitadas mas que não daria tanto problema pra manutenção"},{"author":"Fernando Boaglio","comment":"\"Over-engineering is the root of all evil\" - Fernando Knuth"},{"author":"DarkElf","comment":"Em relação a usar SPA para CRUD, qual seria uma alternativa viável?"},{"author":"Maurício Linhares","comment":"Em não usar né?Rails, Django, os vários frameworks em PHP, tem muita coisa mais simples disponível."},{"author":"DarkElf","comment":"Em não usar né?IssoEntendi, e realmente esses exemplos tratam muito bem de CRUDs."},{"author":"Ronald","comment":"Por quanto tempo já me senti menos por no inicio da carreira passar o dia trabalhando em um monolítico legado usando delphi e ao chegar em casa e ver as tendencias de mercado, ver ruir qualquer orgulho que eu tivesse tido durante o dia. Piorando a experiencia de um trabalho que já era dificil.E a culpa de se sentir assim era só dos hypes hahaha. A empresa até tentou reescrever tudo e implementar microsserviços, front web, cloud..., mas falhou de uma maneira em que quase faliu.Hoje mais vivido percebo que não havia nenhum motivo lógico, nem margens financeiras para se trocar a stack daquela empresa. Nem o porquê sentir vergonha do produto.Abraços pessoal, ótimo podcast."},{"author":"Lucas Palma Stabile","comment":"Tmb trabalho com grandes projetos e solutions num monolítico e tenho o mesmo sentimento inicial que vc pontuou. Sinto também que gasto muito tempo para alguma alteração que deveria ser mais rápida, com cuidado pra não quebrar nada, mesmo em partes que não faço ideia da lógica de negócio."},{"author":"Wanderson Barcelos","comment":"Esse episódio é um balde de água fria na galera,Já dizia no MasterChef \"Menos é mais\".kkkk"},{"author":"Roberta Arcoverde","comment":"hahaha chef Fogaça dando conselhos de programação pra galera!"},{"author":"Alexandre Martins da Silva","comment":"Parabéns pelo episodio, eu achei genial a ideia de falar sobre isso!Achei que era so eu que achava essas coisas na programação.Parabéns e acho que deveria ter uma parte 2."},{"author":"Marcio Robson","comment":"Roberta Arcoverde, sou apaixonado pelo seu pragmatismo! Parabéns a você e aos meninos pelo episódio de hoje!"},{"author":"pedroigor91","comment":"Esse podcast merece um episódio 02! Só um não é suficiente kkk"},{"author":"Thadeu Russo","comment":"Tem que deixar simples para nao ficar \"over-engineered\" :)."}]}